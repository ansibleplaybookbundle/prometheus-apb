---
# - name: "[PROMETHEUS APB][ALERTMANAGER] Rendering Prometheus-AlertManager ConfigMap template "
#   template:
#     src: "{{ item.temp_src }}"
#     dest: "{{ item.temp_dest }}"
#   with_items:
#     - { temp_src: 'prometheus-alertmanager-config-map.yml.j2', temp_dest: "/tmp/config.yml" }
# 
# - name: "[PROMETHEUS APB][ALERTMANAGER] Creating Openshift ConfigMap resource"
#   shell: "oc create configmap {{ prometheus_alertmanager_configmap_name }} --from-file={{ item.temp_dest }} -n {{ namespace }}"
#   with_items:
#     - { temp_dest: "/tmp/config.yml" }

- name: "[PROMETHEUS APB][ALERTMANAGER] Creating Openshift ConfigMap resource for Alertmanger Configuration"
  k8s_v1_config_map:
    state: "{{ state }}"
    name: "{{ prometheus_alertmanager_configmap_name }}"
    namespace: "{{ namespace }}"
    labels:
      app: "{{ service_name_am }}"
      service: "{{ service_name_am }}"
    resource_definition:
      kind: 'ConfigMap'
      apiVersion: 'v1'
      metadata:
        name: "{{ prometheus_alertmanager_configmap_name }}"
        namespace: "{{ namespace }}"
      data:
        config.yml: "{{ lookup('template', 'prometheus-alertmanager-config-map.yml.j2') }}"
  register: prometheus_am_cm_config

- name: "[PROMETHEUS APB][ALERTMANAGER] Creating Openshift ConfigMap resource for Alertmanager Templates Configuration"
  k8s_v1_config_map:
    state: "{{ state }}"
    name: "{{ prometheus_alertmanager_configmap_templates_name }}"
    namespace: "{{ namespace }}"
    labels:
      app: "{{ service_name_am }}"
      service: "{{ service_name_am }}"
    resource_definition:
      kind: 'ConfigMap'
      apiVersion: 'v1'
      metadata:
        name: "{{ prometheus_alertmanager_configmap_templates_name }}"
        namespace: "{{ namespace }}"
      data:
        default.yml: "{{ lookup('file', 'alertmanager-templates/default.tmpl') }}"
        slack.yml: "{{ lookup('file', 'alertmanager-templates/slack.tmpl') }}"
  register: prometheus_am_cm_templates

- name: "[PROMETHEUS APB][ALERTMANAGER] Create Prometheus-AlertManager PVC"
  k8s_v1_persistent_volume_claim:
    name: "{{ prometheus_alertmanager_pvc_name }}"
    namespace: "{{ namespace }}"
    labels:
      app: "{{ service_name_am }}"
      service: "{{ service_name_am }}"
    access_modes:
      - ReadWriteOnce
    resources_requests:
      storage: "{{ PROMETHEUS_AM_STORAGE_SIZE }}Gi"
    state: "{{ state }}"
  register: prometheus_am_pvc

- name: "[PROMETHEUS APB][ALERTMANAGER] Set to {{ state }} the Prometheus-AlertManager Deployment Config"
  openshift_v1_deployment_config:
    name: "{{ service_name_am }}"
    namespace: "{{ namespace }}"
    labels:
      app: "{{ service_name_am }}"
      service: "{{ service_name_am }}"
    replicas: 1
    selector:
      app: "{{ service_name_am }}"
      service: "{{ service_name_am }}"
    spec_template_metadata_labels:
      app: "{{ service_name_am }}"
      service: "{{ service_name_am }}"
    containers:
      - env:
        image: "{{ prometheus_alertmanager_image }}:{{ prometheus_alertmanager_version }}"
        name: "{{ service_name_am }}"
        ports:
        - container_port: "{{ prometheus_alertmanager_port }}"
          protocol: TCP
        volume_mounts:
          - mount_path: "/etc/alertmanager/"
            name: "{{ prometheus_alertmanager_configmap_name }}"
          - mount_path: "/etc/{{ service_name_am }}-templates"
            name: "{{ prometheus_alertmanager_configmap_templates_name }}"
          - mount_path: "/{{ service_name_am }}"
            name: "{{ prometheus_alertmanager_data_volume_name }}"
    volumes:
      - name: "{{ prometheus_alertmanager_configmap_templates_name }}"
        configMap:
          name: "{{ prometheus_alertmanager_configmap_templates_name }}"
      - name: "{{ prometheus_alertmanager_configmap_name }}"
        config_map:
          name: "{{ prometheus_alertmanager_configmap_name }}"
      - name: "{{ prometheus_alertmanager_data_volume_name }}"
        persistent_volume_claim:
          claim_name: "{{ prometheus_alertmanager_pvc_name }}"
  register: prometheus_am_dc

- name: "[PROMETHEUS APB][ALERTMANAGER] Set to {{ state }} the Prometheus-Alertmanager Service"
  k8s_v1_service:
    name: "{{ service_name_am }}"
    namespace: "{{ namespace }}"
    labels:
      app: "{{ service_name_am }}"
      service: "{{ service_name_am }}"
    selector:
      app: "{{ service_name_am }}"
      service: "{{ service_name_am }}"
    ports:
    - name: "{{ service_name_am }}-{{ prometheus_alertmanager_port }}"
      port: "{{ prometheus_alertmanager_port }}"
      target_port: "{{ prometheus_alertmanager_port }}"
    state: "{{ state }}"
  register: prometheus_am_svc
