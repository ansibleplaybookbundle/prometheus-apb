---
- name: "[PROMETHEUS APB][DEV] Set Facts"
  set_fact:
    final_service_name: "{{ service_name }}-{{ _apb_plan_id }}"

- name: "[PROMETHEUS APB][DEV] Renderize templates"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: '', dest: '' }
    - { src: '', dest: '' }


- name: "[PROMETHEUS APB][DEV] Set Prometheus DeploymentConfig to - {{ state }}"
  openshift_v1_deployment_config:
    name: "{{ final_service_name }}"
    namespace: '{{ namespace }}'
    labels:
      app: "{{ app_name }}"
      service: "{{ final_service_name }}"
    replicas: 1
    selector:
      app: "{{ app_name }}"
      service: "{{ final_service_name }}"
    strategy_type: Recreate
    spec_template_metadata_labels:
      app: "{{ app_name }}"
      service: "{{ final_service_name }}"
    containers:
      - name: "{{ service_name }}"
        image: "{{ image }}"
        image_pull_policy: IfNotPresent
        resources:
          limits:
            memory: 512Mi
          request:
            memory: 512Mi
        ports:
          - name: web
            container_port: 9090
            protocol: TCP
        volume_mounts:
          - name: 'prometheus-conf'
            mount_path: /etc/prometheus
          - name: 'prometheus-rules'
            mount_path: /etc/prometheus-rules
          - name: 'etcd-tls-client-certs'
            mount_path: /etc/etcd/ssl
          - name: 'prometheus-data'
            mount_path: /prometheus
      security_context: {}
      termination_message_path: /dev/termination-log
      volumes:
        - name: 'prometheus-conf'
          config_map:
            name: "{{ namespace }}-prometheus-conf"
        - name: 'prometheus-rules'
          config_map:
            name: "{{ namespace }}-prometheus-rules"
        - name: 'etcd-tls-client-certs'
          secret:
            secret_name: "{{ namespace }}-etcd-tls-client-certs"
        - name: 'prometheus-data'
          persistent_volume_claim:
          claim: prometheus-data
            claim_name: "{{ namespace }}-prometheus-data"
      working_dir: /
      triggers:
        - type: ConfigChange
      state: "{{ state }}"
